[{"C:\\Users\\Zunaira\\timer\\src\\index.js":"1","C:\\Users\\Zunaira\\timer\\src\\App.js":"2","C:\\Users\\Zunaira\\timer\\src\\reportWebVitals.js":"3","C:\\Users\\Zunaira\\timer\\src\\containers\\Main.js":"4","C:\\Users\\Zunaira\\timer\\src\\redux\\store.js":"5","C:\\Users\\Zunaira\\timer\\src\\redux\\reducer.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":184,"mtime":1611716662836,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":5554,"mtime":1611834161157,"results":"11","hashOfConfig":"8"},{"size":436,"mtime":1611830793076,"results":"12","hashOfConfig":"8"},{"size":6905,"mtime":1611833282524,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"54704g",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Zunaira\\timer\\src\\index.js",[],["28","29"],"C:\\Users\\Zunaira\\timer\\src\\App.js",[],"C:\\Users\\Zunaira\\timer\\src\\reportWebVitals.js",[],"C:\\Users\\Zunaira\\timer\\src\\containers\\Main.js",["30","31"],"import React, {Component, Fragment} from 'react';\r\nimport styles from './Main.module.css';\r\nimport store from  '../redux/store';\r\n\r\nclass Main extends Component{\r\nconstructor(props){\r\n    super(props);\r\n    \r\n    this.onClickHandler = this.onClickHandler.bind(this);\r\n    this.timer = this.timer.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n}\r\nonClickHandler(command){\r\n    if(command === \"break-increment\"){\r\n        store.dispatch({\r\n            type: \"INCREMENT-BREAK\"\r\n        })\r\n        document.getElementById(\"break-length\").innerHTML = store.getState().startBreakTime;\r\n    }else if(command === \"break-decrement\"){\r\n        store.dispatch({\r\n            type: \"DECREMENT-BREAK\"\r\n        })\r\n        document.getElementById(\"break-length\").innerHTML = store.getState().startBreakTime;\r\n    }else if(command === \"session-increment\"){\r\n        store.dispatch({\r\n            type: \"INCREMENT-SESSION\"\r\n        })\r\n        document.getElementById(\"session-length\").innerHTML = store.getState().startSessionTime;\r\n    }else if(command === \"session-decrement\"){\r\n        store.dispatch({\r\n            type: \"DECREMENT-SESSION\"\r\n        })\r\n        document.getElementById(\"session-length\").innerHTML = store.getState().startSessionTime;\r\n    }\r\n\r\n}\r\n\r\ntimer(){\r\n\r\n        store.dispatch({\r\n            type: \"STOP\"\r\n        })\r\n        \r\n        var interval = setInterval(() => {\r\n            if(store.getState().stop === false){\r\n            store.dispatch({\r\n                type: \"DECREMENT-SECONDS\"\r\n\r\n            })\r\n            if(store.getState().timer === false){\r\n                document.getElementById(\"timer-label\").innerHTML = \"Session\";\r\n            }else{\r\n                document.getElementById(\"timer-label\").innerHTML = \"Break\";\r\n            }\r\n            if(store.getState().minutes === 0 && store.getState().seconds === 0){\r\n                \r\n                return(\r\n                    document.getElementById(\"beep\").play(),\r\n                    store.dispatch({\r\n                        type : \"TOGGLE-TIMER\"\r\n                    }))\r\n               \r\n            }\r\n            if(store.getState().seconds === 60 || store.getState().seconds === 0 ){\r\n               return(\r\n                store.dispatch({\r\n                    type: \"DECREMENT-MINUTES\"\r\n                })\r\n           \r\n               )}\r\n            if(store.getState().timer === false){\r\n                document.getElementById(\"timer-label\").innerHTML = \"Session\";\r\n            }else{\r\n                document.getElementById(\"timer-label\").innerHTML = \"Break\";\r\n            }\r\n            document.getElementById(\"time-left\").innerHTML = store.getState().minutes + \":\" + store.getState().seconds;\r\n        }else{\r\n            clearInterval(interval);\r\n        }\r\n        }, 1000);\r\n   \r\n   \r\n}\r\nreset(){\r\nstore.dispatch({\r\n    type:\"RESET\"\r\n})\r\ndocument.getElementById(\"time-left\").innerHTML = store.getState().minutes + \":\" + \"00\";\r\ndocument.getElementById(\"break-length\").innerHTML = store.getState().startBreakTime;\r\ndocument.getElementById(\"session-length\").innerHTML = store.getState().startSessionTime;\r\nthis.timer();\r\n}\r\nrender(){\r\n    return(\r\n        <Fragment>\r\n            <div id=\"box\" style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignContent:\"center\",height:\"700px\",fontSize:\"30px\",color:\"cadetblue\"}}>\r\n                <h1 id=\"heading\" style ={{margin:\"0 auto\"}}><span style={{color:\"#c74747\",textDecoration:\"underline\"}}>25+5 </span>Clock</h1>\r\n                <div id=\"controls\" style={{display:\"flex\",flexDirection: \"row\",margin:\"0 auto\"}}>\r\n                    <div id=\"break\" style={{margin:\"50px 50px\",textAlign:\"center\"}}>\r\n                        <div id=\"break-label\">Break Length</div>\r\n                        <div id=\"break-length\" style={{color:\"#c74747\"}}>{store.getState().startBreakTime}</div>\r\n                        <button id =\"break-decrement\" onClick = {() => this.onClickHandler(\"break-decrement\")}>Decrement</button>\r\n                        <button id=\"break-increment\" onClick = {() => this.onClickHandler(\"break-increment\")}>Increment</button>\r\n                    </div>\r\n                    <div id=\"session\"  style={{margin:\"50px 50px\",textAlign:\"center\"}}>\r\n                        <div id=\"session-label\">Session Length</div>\r\n                        <div id=\"session-length\" style={{color:\"#c74747\"}}>{store.getState().startSessionTime}</div>\r\n                        <button id=\"session-decrement\" onClick = {() => this.onClickHandler(\"session-decrement\")}>Decrement</button>\r\n                        <button id=\"session-increment\" onClick = {() => this.onClickHandler(\"session-increment\")}>Increment</button>\r\n                       \r\n                    </div>\r\n                </div>\r\n                <div id=\"timer\" style={{margin:\"0 auto\",textAlign:\"center\",border:\"1px solid cadetblue\",borderRadius:\"10px\",width:\"200px\"}}>\r\n                    <div id=\"timer-label\"></div>\r\n                    <div id=\"time-left\" style = {{color:\"#c74747\"}}>25:00</div>\r\n                </div>\r\n                <div id=\"settings\" style={{margin:\"50px auto\"}}>\r\n                    <button id=\"start-stop\" onClick = {this.timer}>Start/Stop</button>\r\n                    <button id =\"reset\" onClick= {this.reset } >Reset</button>\r\n                    \r\n                </div>\r\n                <audio id=\"beep\">\r\n                    <source src=\"beep.mp3\" type=\"audio/mpeg\"/>\r\n                </audio>\r\n            </div>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\n}\r\nexport default Main;","C:\\Users\\Zunaira\\timer\\src\\redux\\store.js",[],"C:\\Users\\Zunaira\\timer\\src\\redux\\reducer.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":88,"column":81,"nodeType":"42","messageId":"43","endLine":88,"endColumn":82},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]